<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testing on Rahil Rehan</title>
    <link>https://rahilrehan.github.io/tags/testing/</link>
    <description>Recent content in testing on Rahil Rehan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://rahilrehan.github.io/tags/testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Test Driven Development - Notes</title>
      <link>https://rahilrehan.github.io/post/test-driven-development-notes/</link>
      <pubDate>Sat, 09 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://rahilrehan.github.io/post/test-driven-development-notes/</guid>
      <description>The art of a good night&amp;rsquo;s sleep is knowing you will not get woken by a support call and the piece of mind from being able to confidently change your software in an always moving market. - Nic Jackson change in code can have undesirable effect on the other parts, tests helps in making the process of changing code in future easy testing pyramid: unit testing(bottom), service/integration(middle), ui/end-end(top)  test cases should decrease as you go from bottom to top        Approach   Just write test first (use expected function) Run and fail the test Write minimal code for the test to run and fail Write minimal code to make test pass Test same function with different values Make sure all tests are passing Tests for base cases Refactor both code and tests     Features and scenarios   Given a feature, break it down to scenarios.</description>
    </item>
    
  </channel>
</rss>
